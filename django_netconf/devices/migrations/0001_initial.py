# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2016-11-07 05:04
from __future__ import unicode_literals

import devices.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Device',
            fields=[
                ('ip_address', models.GenericIPAddressField(primary_key=True, serialize=False, verbose_name='Devices management IP-address:')),
                ('description', models.CharField(blank=True, max_length=300, verbose_name='Device description')),
                ('hostname', models.CharField(blank=True, editable=False, max_length=63, verbose_name='Device name:')),
                ('fqdn', models.CharField(blank=True, max_length=63, verbose_name='Device FQDN:')),
                ('model', models.CharField(blank=True, editable=False, max_length=50, verbose_name='Device hardware model:')),
                ('version', models.CharField(blank=True, editable=False, max_length=50, verbose_name='Device software version:')),
                ('serialnumber', models.CharField(blank=True, editable=False, max_length=50, verbose_name='Device S/N:')),
                ('up_time', models.CharField(blank=True, editable=False, max_length=50, verbose_name='Device uptime:')),
                ('two_re', models.BooleanField(default=False, editable=False, verbose_name='Device has 2 RE (True/False)')),
                ('last_checked_time', models.DateTimeField(auto_now=True, verbose_name='Device last checked time:')),
                ('last_checked_status', models.BooleanField(default=False, editable=False, verbose_name='True for UP, False for DOWN:')),
            ],
        ),
        migrations.CreateModel(
            name='DeviceConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('upload_path', models.FileField(upload_to=devices.models.device_config_path)),
                ('upload_time', models.DateTimeField(auto_now=True)),
                ('related_device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='devices.Device')),
            ],
        ),
        migrations.CreateModel(
            name='DeviceInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instance_name', models.CharField(editable=False, max_length=100)),
                ('instance_type', models.CharField(blank=True, editable=False, max_length=30)),
                ('router_id', models.GenericIPAddressField(blank=True, editable=False, null=True)),
                ('instance_state', models.CharField(blank=True, editable=False, max_length=30)),
                ('related_device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='devices.Device')),
            ],
        ),
        migrations.CreateModel(
            name='InstanceArpTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mac_address', models.CharField(editable=False, max_length=17)),
                ('ip_address', models.GenericIPAddressField(blank=True, editable=False, null=True)),
                ('interface_name', models.CharField(blank=True, editable=False, max_length=100)),
                ('hostname', models.CharField(blank=True, editable=False, max_length=100)),
                ('vpn', models.CharField(blank=True, editable=False, max_length=100)),
                ('related_device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='devices.Device')),
                ('related_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='devices.DeviceInstance')),
            ],
        ),
        migrations.CreateModel(
            name='InstanceLogInterface',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(editable=False, max_length=50)),
                ('address_family_name', models.CharField(blank=True, editable=False, max_length=50)),
                ('encapsulation', models.CharField(blank=True, editable=False, max_length=20)),
                ('mtu', models.CharField(blank=True, editable=False, max_length=20)),
                ('ifa_local', models.GenericIPAddressField(blank=True, editable=False, null=True)),
                ('ifa_prefix', models.SmallIntegerField(blank=True, editable=False, null=True)),
                ('input_packets', models.IntegerField(blank=True, editable=False, null=True)),
                ('output_packets', models.IntegerField(blank=True, editable=False, null=True)),
                ('filter_information', models.CharField(blank=True, editable=False, max_length=100)),
                ('logical_interface_zone_name', models.CharField(blank=True, editable=False, max_length=100)),
                ('related_device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='devices.Device')),
            ],
        ),
        migrations.CreateModel(
            name='InstancePhyInterface',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(editable=False, max_length=50)),
                ('admin_status', models.BooleanField(default=False, editable=False, verbose_name='True for UP, False for DOWN:')),
                ('oper_status', models.BooleanField(default=False, editable=False, verbose_name='True for UP, False for DOWN:')),
                ('speed', models.CharField(blank=True, editable=False, max_length=20)),
                ('mtu', models.CharField(blank=True, editable=False, max_length=20)),
                ('link_mode', models.CharField(blank=True, editable=False, max_length=20)),
                ('if_auto_negotiation', models.CharField(blank=True, editable=False, max_length=20)),
                ('link_level_type', models.CharField(blank=True, editable=False, max_length=20)),
                ('current_physical_address', models.CharField(blank=True, editable=False, max_length=34)),
                ('hardware_physical_address', models.CharField(blank=True, editable=False, max_length=34)),
                ('related_device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='devices.Device')),
            ],
        ),
        migrations.CreateModel(
            name='InstanceRIB',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('table_name', models.CharField(editable=False, max_length=100)),
                ('related_device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='devices.Device')),
                ('related_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='devices.DeviceInstance')),
            ],
        ),
        migrations.CreateModel(
            name='InstanceRouteTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rt_destination_ip', models.GenericIPAddressField(editable=False)),
                ('rt_destination_prefix', models.PositiveSmallIntegerField(editable=False)),
                ('active_tag', models.BooleanField(editable=False, verbose_name='True for *, False for other:')),
                ('protocol_name', models.CharField(editable=False, max_length=20)),
                ('preference', models.PositiveSmallIntegerField(editable=False)),
                ('nh_local_interface', models.CharField(blank=True, editable=False, max_length=100)),
                ('nh_table', models.CharField(blank=True, editable=False, max_length=100)),
                ('nh_type', models.CharField(blank=True, editable=False, max_length=100)),
                ('via', models.CharField(blank=True, editable=False, max_length=100)),
                ('related_device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='devices.Device')),
                ('related_rib', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='devices.InstanceRIB')),
            ],
        ),
        migrations.AddField(
            model_name='instancephyinterface',
            name='related_rib',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='devices.InstanceRIB'),
        ),
        migrations.AddField(
            model_name='instanceloginterface',
            name='related_interface',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='devices.InstancePhyInterface'),
        ),
        migrations.AddField(
            model_name='instanceloginterface',
            name='related_rib',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='devices.InstanceRIB'),
        ),
        migrations.AlterUniqueTogether(
            name='instanceroutetable',
            unique_together=set([('related_device', 'related_rib', 'rt_destination_ip', 'rt_destination_prefix')]),
        ),
        migrations.AlterUniqueTogether(
            name='instancerib',
            unique_together=set([('related_device', 'related_instance', 'table_name')]),
        ),
        migrations.AlterUniqueTogether(
            name='instancephyinterface',
            unique_together=set([('related_device', 'related_rib', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='instanceloginterface',
            unique_together=set([('related_device', 'related_rib', 'related_interface', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='instancearptable',
            unique_together=set([('related_device', 'related_instance', 'mac_address')]),
        ),
        migrations.AlterUniqueTogether(
            name='deviceinstance',
            unique_together=set([('related_device', 'instance_name')]),
        ),
    ]
